<apex:page controller="WelcomeController" showHeader="{!IF($CurrentPage.Parameters.ShowHeader == '1', true, false)}" sidebar="false" tabStyle="Account" standardStylesheets="true" action="{!checkMetadataAPIConnection}">
	<script>
	function createRemoteSite() { 
		// Disable button 
		document.getElementById('createremotesitebtn').disabled = true;
		// Calls the Metdata API from JavaScript to create the Remote Site Setting to permit Apex callouts
		var binding = new XMLHttpRequest();
		var request = 
			'<?xml version="1.0" encoding="utf-8"?>' + 
			'<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">'+
				'<env:Header>' + 
					'<urn:SessionHeader xmlns:urn="http://soap.sforce.com/2006/04/metadata">' + 
						'<urn:sessionId>{!$Api.Session_ID}</urn:sessionId>' + 
					'</urn:SessionHeader>' + 
				'</env:Header>' + 
				'<env:Body>' +
					'<createMetadata xmlns="http://soap.sforce.com/2006/04/metadata">' + 
						'<metadata xsi:type="RemoteSiteSetting">' + 
							'<fullName>{!RemoteSiteName}</fullName>' +
							'<description>Metadata API Remote Site Setting</description>' + 
							'<disableProtocolSecurity>false</disableProtocolSecurity>' + 
							'<isActive>true</isActive>' + 
							'<url>{!Host}</url>' +
						'</metadata>' +
					'</createMetadata>' +
				'</env:Body>' + 
			'</env:Envelope>';
		binding.open('POST', '{!callURL}/services/Soap/m/38.0');
		binding.setRequestHeader('SOAPAction','""');
        binding.withCredentials = true;
		binding.setRequestHeader('Content-Type', 'text/xml');
		binding.onreadystatechange = 
			function() { 
				if(this.readyState==4) {
					var parser = new DOMParser();
					var doc  = parser.parseFromString(this.response, 'application/xml');
					var errors = doc.getElementsByTagName('errors');
					var messageText = '';
					for(var errorIdx = 0; errorIdx < errors.length; errorIdx++)
						messageText+= errors.item(errorIdx).getElementsByTagName('message').item(0).innerHTML + '\n';
					displayMetadataResponse(messageText);
				} 
			}
		binding.send(request);
	}
	</script>
	<body class="homeTab">
		<apex:form id="myForm">
			<apex:actionFunction name="displayMetadataResponse" action="{!displayMetadataResponse}" rerender="myForm">
				<apex:param name="metadataResponse" assignTo="{!metadataResponse}" value="{!metadataResponse}"/>
			</apex:actionFunction>
			<apex:image value="{!$Resource.logoApplicationPerfection}" width="20%" height="20%" style="align : center"/>
			<apex:sectionHeader title="Declarative Remote Site Settings" subtitle="Welcome"/>
			<apex:pageMessages />
			<img src="{!$Resource.logo}" width="20%" height="20%" align="left"/>
			
			<apex:outputPanel rendered="{!MetadataConnectionWarning}">
				
				<p>In order to utilize the features of this tool you need to permit it to access the Salesforce Metadata API of your organization by adding a <a target="_new" href="http://na1.salesforce.com/help/doc/en/configuring_remoteproxy.htm">Remote Site Setting</a> with this Salesforce Server URL <b>{!Host}</b></p>
				<p> Click the <b>Create Remote Site Setting</b> button to have the tool perform this step for you.</p>
				<h1>&nbsp;&nbsp;&nbsp;&nbsp;Important Post Install Step:</h1> 
                <br/><br/><br/><br/>
				<apex:outputPanel rendered="{!existRemoteSiteName}">
					<apex:inputText value="{!RemoteSiteName}"/>
					&nbsp;&nbsp;&nbsp;&nbsp;<apex:commandButton action="{!inputRemoteSiteName}" value="Go" id="theInputRemoteSiteName"/>
				</apex:outputPanel>
				<apex:outputPanel rendered="{!!existRemoteSiteName}">
					&nbsp;&nbsp;&nbsp;&nbsp;<input id="createremotesitebtn" type="button" onclick="createRemoteSite();" value="Create Remote Site Setting"/>
				</apex:outputPanel>
			</apex:outputPanel>

			<apex:outputPanel rendered="{!MetadataConnectionWarning}">
				&nbsp;&nbsp;&nbsp;&nbsp;<p style="color:gray">DEBUG USE ONLY: {!metadataApiException}</p>
			</apex:outputPanel>
			<apex:outputPanel rendered="{!!MetadataConnectionWarning}">
				&nbsp;&nbsp;&nbsp;&nbsp;<apex:commandButton action="{!Back}" value="Back" id="BackBtn" style="width: 200px; font-size: 20px;"/>
			</apex:outputPanel>
		</apex:form>
	</body>
</apex:page>